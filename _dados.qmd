
```{ojs}
//| output: false

import { bar, line, filledLine  } from '@chrispahm/charts'

dados_taxas = FileAttachment("files/Taxa distorção e Rendimento.xlsx").xlsx();


dados_matriculas = FileAttachment("files/Matriculas 2010 a 2022 ID.xlsx").xlsx();

searchParams = new URLSearchParams(location.search);

id_pesquisa = searchParams.has("id") ? searchParams.get("id") : "2928703";

// ano_pesquisa = searchParams.has("ano") ? searchParams.get("ano") : "2010";

// ano_pesquisa_parcial = "2022";

filtered = dados_matriculas.sheet("números absolutos").filter(function(filtro) {
  return filtro.A != "Territórios BA" && filtro.B == id_pesquisa;
})


filtered_distorcao = dados_taxas.sheet("Taxa distorção").filter(function(filtro) {
  return filtro.A != "Territórios BA" && filtro.B == id_pesquisa && (pesquisa_ano == "2010" || pesquisa_ano == "2020");
})


filtered_rendimento = dados_taxas.sheet("Taxa rendimento").filter(function(filtro) {
  return filtro.A != "Territórios BA" && filtro.B == id_pesquisa&& (pesquisa_ano == "2010" || pesquisa_ano == "2019");;
})


nomeCidade = filtered[0].C

dados = [{
  "2010": {
  "Total" : filtered[0].D, 
  "Masculina": filtered[0].E, 
  "Feminina": filtered[0].F,
  "Nãodeclarada": filtered[0].G,
  "Branca": filtered[0].H,
  "Preta": filtered[0].I,
  "Parda": filtered[0].J,
  "Amarela": filtered[0].K,
  "Indígena":filtered[0].L,
  "Deficiência": filtered[0].M,},

  "2011": {
  "Total" : filtered[0].N, 
  "Masculina": filtered[0].O, 
  "Feminina": filtered[0].P,
  "Nãodeclarada": filtered[0].Q,
  "Branca": filtered[0].R,
  "Preta": filtered[0].S,
  "Parda": filtered[0].T,
  "Amarela": filtered[0].U,
  "Indígena":filtered[0].V,
  "Deficiência": filtered[0].W,},

  "2012": {
  "Total" : filtered[0].X, 
  "Masculina": filtered[0].Y, 
  "Feminina": filtered[0].Z,
  "Nãodeclarada": filtered[0].AA,
  "Branca": filtered[0].AB,
  "Preta": filtered[0].AC,
  "Parda": filtered[0].AD,
  "Amarela": filtered[0].AE,
  "Indígena":filtered[0].AF,
  "Deficiência": filtered[0].AG,},

  "2013": {
  "Total" : filtered[0].AH, 
  "Masculina": filtered[0].AI, 
  "Feminina": filtered[0].AJ,
  "Nãodeclarada": filtered[0].AK,
  "Branca": filtered[0].AL,
  "Preta": filtered[0].AM,
  "Parda": filtered[0].AN,
  "Amarela": filtered[0].AO,
  "Indígena":filtered[0].AP,
  "Deficiência": filtered[0].AQ,},

  "2014": {
  "Total" : filtered[0].AR, 
  "Masculina": filtered[0].AS, 
  "Feminina": filtered[0].AT,
  "Nãodeclarada": filtered[0].AU,
  "Branca": filtered[0].AV,
  "Preta": filtered[0].AW,
  "Parda": filtered[0].AX,
  "Amarela": filtered[0].AY,
  "Indígena":filtered[0].AZ,
  "Deficiência": filtered[0].BA,},


  "2015": {
  "Total" : filtered[0].BB, 
  "Masculina": filtered[0].BC, 
  "Feminina": filtered[0].BD,
  "Nãodeclarada": filtered[0].BE,
  "Branca": filtered[0].BF,
  "Preta": filtered[0].BG,
  "Parda": filtered[0].BH,
  "Amarela": filtered[0].BI,
  "Indígena":filtered[0].BJ,
  "Deficiência": filtered[0].BK,},

  "2016": {
  "Total" : filtered[0].BL, 
  "Masculina": filtered[0].BM, 
  "Feminina": filtered[0].BN,
  "Nãodeclarada": filtered[0].BO,
  "Branca": filtered[0].BP,
  "Preta": filtered[0].BQ,
  "Parda": filtered[0].BR,
  "Amarela": filtered[0].BS,
  "Indígena":filtered[0].BT,
  "Deficiência": filtered[0].BU,},


  "2017": {
  "Total" : filtered[0].BV, 
  "Masculina": filtered[0].BW, 
  "Feminina": filtered[0].BX,
  "Nãodeclarada": filtered[0].BY,
  "Branca": filtered[0].BZ,
  "Preta": filtered[0].CA,
  "Parda": filtered[0].CB,
  "Amarela": filtered[0].CC,
  "Indígena":filtered[0].CD,
  "Deficiência": filtered[0].CE,},

  "2018": {
  "Total" : filtered[0].CF, 
  "Masculina": filtered[0].CG, 
  "Feminina": filtered[0].CH,
  "Nãodeclarada": filtered[0].CI,
  "Branca": filtered[0].CJ,
  "Preta": filtered[0].CK,
  "Parda": filtered[0].CL,
  "Amarela": filtered[0].CM,
  "Indígena":filtered[0].CN,
  "Deficiência": filtered[0].CO,},

  "2019": {
  "Total" : filtered[0].CP, 
  "Masculina": filtered[0].CQ, 
  "Feminina": filtered[0].CR,
  "Nãodeclarada": filtered[0].CS,
  "Branca": filtered[0].CT,
  "Preta": filtered[0].CU,
  "Parda": filtered[0].CV,
  "Amarela": filtered[0].CW,
  "Indígena":filtered[0].CX,
  "Deficiência": filtered[0].CY,},
  

  "2020": {
  "Total" : filtered[0].CZ, 
  "Masculina": filtered[0].DA, 
  "Feminina": filtered[0].DB,
  "Nãodeclarada": filtered[0].DC,
  "Branca": filtered[0].DD,
  "Preta": filtered[0].DE,
  "Parda": filtered[0].DF,
  "Amarela": filtered[0].DG,
  "Indígena":filtered[0].DH,
  "Deficiência": filtered[0].DI,},

   "2021": {
  "Total" : filtered[0].DJ, 
  "Integral": filtered[0].DK,
  "Parcial":filtered[0].DL},

  "2022": {
  "Total" : filtered[0].DM, 
  "Integral": filtered[0].DN,
  "Parcial":filtered[0].DO},
  }]


  dados_rendimento = {
    var dados_rendimento ={
      "2010": {
      "Aprovação" : (filtered_rendimento[0].D* 100).toFixed(2), 
      "Reprovação": (filtered_rendimento[0].E* 100).toFixed(2), 
      "Abandono": (filtered_rendimento[0].F* 100).toFixed(2)},
      "2019": {
      "Aprovação" : (filtered_rendimento[0].CV* 100).toFixed(2), 
      "Reprovação": (filtered_rendimento[0].CW* 100).toFixed(2), 
      "Abandono": (filtered_rendimento[0].CX* 100).toFixed(2)}
    }
    return dados_rendimento
  }
   




total = dados[0][pesquisa_ano].Total.toLocaleString('pt-BR');

total_masculina = dados[0][pesquisa_ano].Masculina.toLocaleString('pt-BR');
total_masculina_porcentagem = calculaPorcentagemTotal(dados[0][pesquisa_ano].Masculina);

total_feminina = dados[0][pesquisa_ano].Feminina.toLocaleString('pt-BR');
total_feminina_porcentagem = calculaPorcentagemTotal(dados[0][pesquisa_ano].Feminina);

total_naodeclarada = dados[0][pesquisa_ano].Nãodeclarada.toLocaleString('pt-BR');
total_naodeclarada_porcentagem = calculaPorcentagemTotal(dados[0][pesquisa_ano].Nãodeclarada);

total_branca = dados[0][pesquisa_ano].Branca.toLocaleString('pt-BR');
total_branca_porcentagem = calculaPorcentagemTotal(dados[0][pesquisa_ano].Branca);

total_preta = dados[0][pesquisa_ano].Preta.toLocaleString('pt-BR');
total_preta_porcentagem = calculaPorcentagemTotal(dados[0][pesquisa_ano].Preta);

total_parda = dados[0][pesquisa_ano].Parda.toLocaleString('pt-BR');
total_parda_porcentagem = calculaPorcentagemTotal(dados[0][pesquisa_ano].Parda);

total_amarela = dados[0][pesquisa_ano].Amarela.toLocaleString('pt-BR');
total_amarela_porcentagem = calculaPorcentagemTotal(dados[0][pesquisa_ano].Amarela);

total_indigena = dados[0][pesquisa_ano].Indígena.toLocaleString('pt-BR');
total_indigena_porcentagem = calculaPorcentagemTotal(dados[0][pesquisa_ano].Indígena);

total_deficiencia = dados[0][pesquisa_ano].Deficiência.toLocaleString('pt-BR');
total_deficiencia_porcentagem = calculaPorcentagemTotal(dados[0][pesquisa_ano].Deficiência);



```

{{< include _functions.qmd >}}